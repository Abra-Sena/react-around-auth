{"ast":null,"code":"const showErrorMessage = (form, input, settings) => {\n  const error = form.querySelector(`#${input.id}-error`);\n  error.textContent = input.validationMessage;\n  error.classList.add(settings.errorClass);\n  input.classList.add(settings.inputErrorClass);\n};\n\nconst hideErrorMessage = (form, input, settings) => {\n  const error = form.querySelector(`#${input.id}-error`);\n  error.textContent = '';\n  error.classList.remove(settings.errorClass);\n  input.classList.remove(settings.inputErrorClass);\n};\n\nconst checkInputValidity = (form, input, errorClass, inputErrorClass) => {\n  if (input.validity.valid) {\n    hideErrorMessage(form, input, errorClass, inputErrorClass);\n  } else {\n    showErrorMessage(form, input, errorClass, inputErrorClass);\n  }\n};\n\nconst toggleButtonState = (inputs, button, inactiveButtonClass) => {\n  const isValid = inputs.every(input => input.validity.valid);\n\n  if (isValid) {\n    button.classList.remove(inactiveButtonClass);\n    button.classList.remove('form__submit_disabled');\n  } else {\n    button.classList.add(inactiveButtonClass);\n    button.classList.add('form__submit_disabled');\n  }\n};\n\nconst setEventListeners = (form, settings) => {\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\n  const button = form.querySelector(settings.submitButtonSelector);\n  inputs.forEach(input => {\n    input.addEventListener('input', () => {\n      checkInputValidity(form, input, settings);\n      toggleButtonState(inputs, button, settings.inactiveButtonClass);\n    });\n  });\n};\n\nconst enableValidation = settings => {\n  const forms = Array.from(document.querySelectorAll(settings.formSelector));\n  forms.forEach(form => {\n    form.addEventListener('submit', evt => {\n      evt.preventDefault();\n    });\n    setEventListeners(form, settings);\n  });\n};\n\nenableValidation({\n  formSelector: \".form\",\n  inputSelector: \".form__input\",\n  submitButtonSelector: \".form__submit\",\n  inactiveButtonClass: \"form__submit_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\"\n});","map":{"version":3,"sources":["/Users/emiline/Desktop/dev/around-react/src/components/FormValidator.js"],"names":["showErrorMessage","form","input","settings","error","querySelector","id","textContent","validationMessage","classList","add","errorClass","inputErrorClass","hideErrorMessage","remove","checkInputValidity","validity","valid","toggleButtonState","inputs","button","inactiveButtonClass","isValid","every","setEventListeners","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","addEventListener","enableValidation","forms","document","formSelector","evt","preventDefault"],"mappings":"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","sourcesContent":["const showErrorMessage = (form, input, settings) => {\n    const error = form.querySelector(`#${input.id}-error`);\n    error.textContent = input.validationMessage;\n\n    error.classList.add(settings.errorClass);\n    input.classList.add(settings.inputErrorClass);\n  }\n\n  const hideErrorMessage = (form, input, settings) => {\n    const error = form.querySelector(`#${input.id}-error`);\n    error.textContent = '';\n\n    error.classList.remove(settings.errorClass);\n    input.classList.remove(settings.inputErrorClass);\n  }\n\n  const checkInputValidity = (form, input, errorClass, inputErrorClass) => {\n    if(input.validity.valid) {\n      hideErrorMessage(form, input, errorClass, inputErrorClass);\n    } else {\n      showErrorMessage(form, input, errorClass, inputErrorClass);\n    }\n  }\n\n  const toggleButtonState = (inputs, button, inactiveButtonClass) => {\n    const isValid = inputs.every((input) => input.validity.valid);\n\n    if(isValid) {\n      button.classList.remove(inactiveButtonClass);\n      button.classList.remove('form__submit_disabled');\n    } else {\n      button.classList.add(inactiveButtonClass);\n      button.classList.add('form__submit_disabled');\n    }\n  }\n\n  const setEventListeners = (form, settings) => {\n    const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\n    const button = form.querySelector(settings.submitButtonSelector);\n\n    inputs.forEach((input) => {\n      input.addEventListener('input', () => {\n        checkInputValidity(form, input, settings);\n        toggleButtonState(inputs, button, settings.inactiveButtonClass);\n      });\n    });\n  }\n\n  const enableValidation = (settings) => {\n    const forms = Array.from(document.querySelectorAll(settings.formSelector));\n\n    forms.forEach((form) => {\n      form.addEventListener('submit', (evt) => {\n        evt.preventDefault();\n      });\n\n      setEventListeners(form, settings);\n    });\n  }\n\n  enableValidation({\n    formSelector: \".form\",\n    inputSelector: \".form__input\",\n    submitButtonSelector: \".form__submit\",\n    inactiveButtonClass: \"form__submit_disabled\",\n    inputErrorClass: \"popup__input_type_error\",\n    errorClass: \"popup__error_visible\"\n  });\n"]},"metadata":{},"sourceType":"module"}