{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/emiline/Desktop/dev/around-react/src/components/PopupWithForm.js\";\nimport Input from './Input';\n\nfunction PopupWithForm(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `popup popup_type_${props.name} ${props.isOpen ? \"popup_open\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"avatar\",\n        name: \"avatar\",\n        className: \"form popup__form `form_${props.name}`\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form__title\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"form__field\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Avatar link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"avatar-url\",\n            type: \"url\",\n            name: \"link\",\n            className: \"form__input form__input_type_avatar-url\",\n            placeholder: \"Avatar link\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"avatar-url-error\",\n            className: \"form__field form__field_error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          \"aria-label\": \"save-edit-avatar\",\n          className: \"form__submit\",\n          children: props.buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"close-edit-avatar\",\n          className: \"popup__close form__close-button\",\n          onClick: props.onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_c = PopupWithForm;\nexport default PopupWithForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"sources":["/Users/emiline/Desktop/dev/around-react/src/components/PopupWithForm.js"],"names":["Input","PopupWithForm","props","name","isOpen","title","buttonText","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAG,oBAAmBA,KAAK,CAACC,IAAK,IAAGD,KAAK,CAACE,MAAN,GAAe,YAAf,GAA8B,EAAG,EAAnF;AAAA,6BACE;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,IAAI,EAAC,QAAvB;AAAgC,QAAA,SAAS,EAAC,uCAA1C;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6BF,KAAK,CAACG;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAU,UAAA,SAAS,EAAC,aAApB;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,EAAE,EAAC,YAAV;AAAuB,YAAA,IAAI,EAAC,KAA5B;AAAkC,YAAA,IAAI,EAAC,MAAvC;AAA8C,YAAA,SAAS,EAAC,yCAAxD;AAAkG,YAAA,WAAW,EAAC,aAA9G;AAA4H,YAAA,QAAQ;AAApI;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAM,YAAA,EAAE,EAAC,kBAAT;AAA4B,YAAA,SAAS,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,wBAAW,kBAAjC;AAAoD,UAAA,SAAS,EAAC,cAA9D;AAAA,oBAA8EH,KAAK,CAACI;AAApF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,wBAAW,mBAAjC;AAAqD,UAAA,SAAS,EAAC,iCAA/D;AAAiG,UAAA,OAAO,EAAEJ,KAAK,CAACK;AAAhH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAgBD;;KAjBQN,a;AAmBT,eAAeA,aAAf","sourcesContent":["import Input from './Input';\n\nfunction PopupWithForm(props) {\n  return (\n    <>\n    <div className={`popup popup_type_${props.name} ${props.isOpen ? \"popup_open\" : \"\"}`}>\n      <form id=\"avatar\" name=\"avatar\" className=\"form popup__form `form_${props.name}`\">\n        <h2 className=\"form__title\">{props.title}</h2>\n        <fieldset className=\"form__field\">\n          <Input placeholder='Avatar link' />\n          <input id=\"avatar-url\" type=\"url\" name=\"link\" className=\"form__input form__input_type_avatar-url\" placeholder=\"Avatar link\" required />\n          <span id=\"avatar-url-error\" className=\"form__field form__field_error\"></span>\n        </fieldset>\n        <button type=\"submit\" aria-label=\"save-edit-avatar\" className=\"form__submit\">{props.buttonText}</button>\n        <button type=\"button\" aria-label=\"close-edit-avatar\" className=\"popup__close form__close-button\" onClick={props.onClose}></button>\n      </form>\n    </div>\n    </>\n  )\n}\n\nexport default PopupWithForm;\n\n"]},"metadata":{},"sourceType":"module"}