{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/emiline/Desktop/dev/react-around-auth/front-end/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport PopupWithForm from './PopupWithForm';\nimport AddPlacePopup from './AddNewCardPopup';\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport ImagePopup from './ImagePopup';\nimport api from \"../utils/api\";\nimport * as auth from \"../utils/auth\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  _s();\n\n  // current user context\n  const [currentUser, setCurrentUser] = React.useState({}); //popupus\n\n  const [isAddNewCard, setAddNewCardPopup] = React.useState(false);\n  const [isEditAvatar, setEditAvatarPopup] = React.useState(false);\n  const [isEditProfile, setEditProfilePopup] = React.useState(false);\n  const [isDeleteCard, setDeleteCardPopup] = React.useState(false);\n  const [isImageExpand, setImageExpand] = React.useState(false);\n  const [email, setEmail] = React.useState(false);\n  const [password, setPassword] = React.useState(false);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [isSuccess, setIsSuccess] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: \"Yosemite\",\n    link: \"https://code.s3.yandex.net/web-code/yosemite.jpg\"\n  });\n  const history = useHistory(); //Registration\n\n  function handleRegister(email, password) {\n    auth.register(email, password).then(res => {\n      if (res.err || !res) {\n        setIsSuccess(false); // set state for result popup here: setIsResultPopup(true);\n      }\n\n      setIsSuccess(true); // set state for result popup here: setIsResultPopup(true);\n\n      history.push('/');\n    }).catch(err => console.log(err));\n  } //Login\n\n\n  function handleLogin(email, password) {\n    auth.authorize(email, password).then(data => {\n      if (!data || data.err) {\n        console.log(data.error);\n        setIsSuccess(false); // set state for result popup here: setIsResultPopup(true);\n      }\n\n      if (data.token) {\n        setPassword('');\n        setIsLoggedIn(true);\n        history.push('/');\n        return;\n      }\n    }).catch(err => console.log(err));\n  } //Signout\n\n\n  function handleSignOut() {\n    localStorage.removeItem('jwt');\n    setIsLoggedIn(false);\n    setEmail('');\n    history.push('signin');\n  } //handle click on buttons\n\n\n  function handleEditAvatarBtn() {\n    setEditAvatarPopup(true);\n  }\n\n  function handleEditProfileBtn() {\n    setEditProfilePopup(true);\n  }\n\n  function handleAddCardBtn() {\n    setAddNewCardPopup(true);\n  } // function handleDeleteBtn(card) { // not needed yet\n  //   setDeleteCardPopup(true);\n  // }\n\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImageExpand(true);\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const res = isLiked ? api.removeCardLike(card.id) : api.addCardLike(card.id);\n    res.then(newCard => {\n      // Create a new array based on the existing one and putting a new card into it\n      const newCards = cards.map(c => c.id === card.id ? transformCard(newCard) : c); // Update the state\n\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopup(false);\n    setEditProfilePopup(false);\n    setAddNewCardPopup(false);\n    setDeleteCardPopup(false);\n    setImageExpand(false);\n  } // to be handled later\n  // function handleEscClose(evt) {\n  //   if(evt.key === 'Escape') {\n  //     closeAllPopups();\n  //   }\n  // }\n\n\n  function handlePopupClose(evt) {\n    if (evt.target !== evt.currentTarget) return;\n    closeAllPopups();\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card.id).then(() => {\n      const cardsCopy = cards.filter(item => item.id !== card.id);\n      setCards(cardsCopy);\n    }).catch(err => console.log(err));\n  }\n\n  function handleEditAvatar(avatar) {\n    api.setUserAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser(res);\n    }).then(() => setEditAvatarPopup(false)).catch(err => console.log(err));\n  }\n\n  function handleEditProfile({\n    name,\n    about\n  }) {\n    api.setUserInfos({\n      name,\n      about\n    }).then(user => {\n      setCurrentUser(user);\n    }).then(() => setEditProfilePopup(false)).catch(err => console.log(err));\n  }\n\n  function transformCard(cardItem) {\n    return {\n      alt: cardItem.name,\n      title: cardItem.name,\n      src: cardItem.link,\n      id: cardItem._id,\n      owner: cardItem.owner,\n      likes: cardItem.likes\n    };\n  }\n\n  function handleAddNewCard({\n    name,\n    link\n  }) {\n    api.addCard({\n      name,\n      link\n    }).then(newCard => setCards([transformCard(newCard), ...cards])).then(() => setAddNewCardPopup(false)).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n    api.getInitialCards().then(initialCards => {\n      setCards(initialCards.map(transformCard));\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"./signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            isLoggedIn: isLoggedIn,\n            handleSignOut: handleSignOut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Register, {\n            email: email,\n            password: password,\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            isLoggedIn: isLoggedIn,\n            handleSignOut: handleSignOut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Login, {\n            email: email,\n            password: password,\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatar,\n      onClose: handlePopupClose,\n      onUpdateAvatar: handleEditAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfile,\n      onClose: handlePopupClose,\n      onProfileUpdate: handleEditProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddNewCard,\n      onClose: handlePopupClose,\n      handleAddNewCard: handleAddNewCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: \"delete\",\n      title: \"Are You Sure?\",\n      submitButton: \"Yes\",\n      isOpen: isDeleteCard,\n      onClose: handlePopupClose,\n      onSubmit: handleCardDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      src: selectedCard.src,\n      title: selectedCard.title,\n      isOpen: isImageExpand,\n      onClose: handlePopupClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YMiCqNmvy7fgZUSkMesz3IoE508=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emiline/Desktop/dev/react-around-auth/front-end/src/components/App.js"],"names":["React","BrowserRouter","Redirect","Route","Switch","useHistory","Header","Main","Footer","Register","Login","ProtectedRoute","PopupWithForm","AddPlacePopup","EditAvatarPopup","EditProfilePopup","ImagePopup","api","auth","CurrentUserContext","App","currentUser","setCurrentUser","useState","isAddNewCard","setAddNewCardPopup","isEditAvatar","setEditAvatarPopup","isEditProfile","setEditProfilePopup","isDeleteCard","setDeleteCardPopup","isImageExpand","setImageExpand","email","setEmail","password","setPassword","isLoggedIn","setIsLoggedIn","isSuccess","setIsSuccess","cards","setCards","selectedCard","setSelectedCard","name","link","history","handleRegister","register","then","res","err","push","catch","console","log","handleLogin","authorize","data","error","token","handleSignOut","localStorage","removeItem","handleEditAvatarBtn","handleEditProfileBtn","handleAddCardBtn","handleCardClick","card","handleCardLike","isLiked","likes","some","i","_id","removeCardLike","id","addCardLike","newCard","newCards","map","c","transformCard","closeAllPopups","handlePopupClose","evt","target","currentTarget","handleCardDelete","removeCard","cardsCopy","filter","item","handleEditAvatar","avatar","setUserAvatar","handleEditProfile","about","setUserInfos","user","cardItem","alt","title","src","owner","handleAddNewCard","addCard","useEffect","getUserInfo","getInitialCards","initialCards"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch, useHistory} from 'react-router-dom'\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport PopupWithForm from './PopupWithForm';\nimport AddPlacePopup from './AddNewCardPopup';\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport ImagePopup from './ImagePopup';\nimport api from \"../utils/api\";\nimport * as auth from \"../utils/auth\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  // current user context\n  const [currentUser, setCurrentUser] = React.useState({});\n  //popupus\n  const [isAddNewCard, setAddNewCardPopup] = React.useState(false);\n  const [isEditAvatar, setEditAvatarPopup] = React.useState(false);\n  const [isEditProfile, setEditProfilePopup] = React.useState(false);\n  const [isDeleteCard, setDeleteCardPopup] = React.useState(false);\n  const [isImageExpand, setImageExpand] = React.useState(false);\n\n  const [email, setEmail] = React.useState(false);\n  const [password, setPassword] = React.useState(false);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [isSuccess, setIsSuccess] = React.useState(false);\n\n  const [cards, setCards] = React.useState([]);\n  const [selectedCard, setSelectedCard] = React.useState({name: \"Yosemite\", link: \"https://code.s3.yandex.net/web-code/yosemite.jpg\"});\n\n  const history = useHistory();\n\n  //Registration\n  function handleRegister(email, password) {\n    auth.register(email, password)\n      .then((res) => {\n        if(res.err || !res) {\n          setIsSuccess(false);\n          // set state for result popup here: setIsResultPopup(true);\n        }\n\n        setIsSuccess(true);\n        // set state for result popup here: setIsResultPopup(true);\n        history.push('/');\n      })\n      .catch(err => console.log(err));\n  }\n  //Login\n  function handleLogin(email, password) {\n    auth.authorize(email, password)\n    .then((data) => {\n      if (!data || data.err) {\n        console.log(data.error);\n        setIsSuccess(false);\n        // set state for result popup here: setIsResultPopup(true);\n      }\n      if(data.token) {\n        setPassword('');\n        setIsLoggedIn(true);\n        history.push('/')\n        return;\n      }\n    })\n    .catch(err => console.log(err));\n  }\n  //Signout\n  function handleSignOut() {\n    localStorage.removeItem('jwt');\n    setIsLoggedIn(false);\n    setEmail('');\n    history.push('signin');\n  }\n\n  //handle click on buttons\n  function handleEditAvatarBtn() {\n    setEditAvatarPopup(true);\n  }\n  function handleEditProfileBtn() {\n    setEditProfilePopup(true);\n  }\n  function handleAddCardBtn() {\n    setAddNewCardPopup(true);\n  }\n  // function handleDeleteBtn(card) { // not needed yet\n  //   setDeleteCardPopup(true);\n  // }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImageExpand(true);\n  }\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    const res = isLiked ? api.removeCardLike(card.id) : api.addCardLike(card.id);\n\n    res.then((newCard) => {\n      // Create a new array based on the existing one and putting a new card into it\n      const newCards = cards.map((c) => c.id === card.id ? transformCard(newCard) : c);\n      // Update the state\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n  function closeAllPopups() {\n    setEditAvatarPopup(false);\n    setEditProfilePopup(false);\n    setAddNewCardPopup(false);\n    setDeleteCardPopup(false);\n    setImageExpand(false);\n  }\n  // to be handled later\n  // function handleEscClose(evt) {\n  //   if(evt.key === 'Escape') {\n  //     closeAllPopups();\n  //   }\n  // }\n  function handlePopupClose(evt) {\n    if(evt.target !== evt.currentTarget) return;\n\n    closeAllPopups();\n  }\n  function handleCardDelete(card) {\n    api.removeCard(card.id)\n      .then(() => {\n        const cardsCopy = cards.filter((item) => item.id !== card.id);\n        setCards(cardsCopy);\n      })\n      .catch(err => console.log(err));\n  }\n\n  function handleEditAvatar(avatar) {\n    api.setUserAvatar({avatar})\n      .then((res) => { setCurrentUser(res) })\n      .then(() =>  setEditAvatarPopup(false))\n      .catch(err => console.log(err));\n  }\n\n  function handleEditProfile({name, about}) {\n    api.setUserInfos({name, about})\n      .then((user) => { setCurrentUser(user); })\n      .then(() =>  setEditProfilePopup(false))\n      .catch(err => console.log(err));\n  }\n\n  function transformCard(cardItem) {\n    return {\n      alt: cardItem.name,\n      title: cardItem.name,\n      src: cardItem.link,\n      id: cardItem._id,\n      owner: cardItem.owner,\n      likes: cardItem.likes\n    }\n  }\n\n  function handleAddNewCard({name, link}) {\n    api.addCard({name, link})\n      .then((newCard) => setCards([transformCard(newCard), ...cards]) )\n      .then(() => setAddNewCardPopup(false))\n      .catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch(err => console.log(err));\n\n    api.getInitialCards()\n    .then((initialCards) => {\n      setCards(\n        initialCards.map(transformCard)\n      )\n    })\n    .catch(err => console.log(err));\n  }, [])\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <BrowserRouter>\n        <Switch>\n          <Route path='*'>\n            <Redirect to='./signup' />\n          </Route>\n\n          <Route path='/signup'>\n            <Header isLoggedIn={isLoggedIn} handleSignOut={handleSignOut} />\n            <Register email={email} password={password} handleRegister={handleRegister} />\n          </Route>\n\n          <Route path='/signin'>\n            <Header isLoggedIn={isLoggedIn} handleSignOut={handleSignOut} />\n            <Login email={email} password={password} handleLogin={handleLogin} />\n          </Route>\n\n          {/* <ProtectedRoute exact path='/'\n            isLoggedIn={isLoggedIn}\n            email={email}\n            cards={cards}\n            component={Main}\n            handleEditAvatarBtn={handleEditAvatarBtn}\n            handleEditProfileBtn={handleEditProfileBtn}\n            handleAddCardBtn={handleAddCardBtn}\n            handleCardLike={(card) => handleCardLike(card)}\n            handleCardDelete={(card) => handleCardDelete(card)}\n            handleCardClick={(card) => handleCardClick(card)}\n            onCardClick={(card) => handleCardClick(card)}\n            onDeleteClick={(card) => handleCardDelete(card)}\n            onLickeClick={(card) => handleCardLike(card)}\n          /> */}\n        </Switch>\n      </BrowserRouter>\n\n      <Footer />\n\n      {/* Edit avatar popup */}\n      <EditAvatarPopup isOpen={isEditAvatar} onClose={handlePopupClose} onUpdateAvatar={handleEditAvatar} />\n\n      {/* Edit Profile popup */}\n      <EditProfilePopup isOpen={isEditProfile} onClose={handlePopupClose} onProfileUpdate={handleEditProfile} />\n\n      {/* Add New Card Popup */}\n      <AddPlacePopup isOpen={isAddNewCard} onClose={handlePopupClose} handleAddNewCard={handleAddNewCard} />\n\n      {/* Delete card confirmation - not needed yet */}\n      <PopupWithForm name=\"delete\" title=\"Are You Sure?\" submitButton=\"Yes\" isOpen={isDeleteCard} onClose={handlePopupClose} onSubmit={handleCardDelete} />\n\n      {/* Expand card on full-screen */}\n      <ImagePopup src={selectedCard.src} title={selectedCard.title} isOpen={isImageExpand} onClose={handlePopupClose} />\n\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}