{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/emiline/Desktop/dev/around-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/currentUserContext';\nimport { defaultSettings, profileConfig, cardsConfig, popupConfig, avatarImage, avatarPicInput, avatarEditButton, descriptionInput, nameInput, submitAvatar, submitCard, submitEdit, projectId } from '../utils/constants';\nimport Api from './Api';\nimport Card from './Card';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport AddCardPopup from './AddCardPopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport PopupWithForm from './PopupWithForm';\nimport PopupWithImage from './PopupWithImage';\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState({});\n  const api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-5\",\n    headers: {\n      authorization: projectId,\n      \"Content-Type\": \"application/json\"\n    }\n  }); //retrieve user profile infor from server\n\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n  }, []); //collect cards from server\n\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res.map(card => {\n        title: card.name;\n\n        link: card.link;\n\n        _id: card._id;\n\n        likes: card.likes;\n\n        userId: card.owner;\n      }));\n    }).catch(err => console.log(err));\n  }, []); //popupus\n\n  const [isEditAvatar, setEditAvatar] = React.useState(false);\n  const [isEditProfile, setEditProfile] = React.useState(false);\n  const [isAddNewCard, setAddNewCard] = React.useState(false);\n  const [isDeleteCard, setDeleteCard] = React.useState(false);\n  const [isImageExpand, setImageExpand] = React.useState(false); //expand image elements\n\n  const [imageLink, setImageLink] = React.useState('');\n  const [imageTitle, setImageTitle] = React.useState('');\n\n  function handleEditAvatarBtn() {\n    setEditAvatar(true);\n  }\n\n  function handleEditProfileBtn() {\n    setEditProfile(true);\n  }\n\n  function handleEditAddCardBtn() {\n    setAddNewCard(true);\n  }\n\n  function handlePopupClose() {\n    setEditAvatar(false);\n    setEditProfile(false);\n    setAddNewCard(false);\n    setImageExpand(false);\n  }\n\n  function handleImageExpand() {\n    setImageTitle(name);\n    setImageLink(link);\n    setImageExpand(true);\n  } // React.useEffect(() => {\n  //   api.getAppInfo()\n  // .then(([userData, initialCards]) => {\n  //   //instance of section class\n  //   const defaultCardList = new Section({\n  //     item: initialCards,\n  //     renderer: addingCardToPage\n  //     },\n  //     cardsConfig.placesWrap\n  //   )\n  //   //render cards to the page\n  //   defaultCardList.rendererItems();\n  //   //click on add button to add cards to the page\n  //   const addCardModal = new PopupWithForm({\n  //     popupSelector: popupConfig.addCardFormModal,\n  //     handleFormSubmit: (data) => {\n  //       submitCard.textContent = \"Creating...\";\n  //       api.addCard(data)\n  //         .then(data => {\n  //           submitCard.textContent = \"Create\";\n  //           //instance of card\n  //           addingCardToPage(data);\n  //           addCardModal.close();\n  //         })\n  //         .catch(err => console.log(err))\n  //     }\n  //   });\n  //   addCardModal.setEventListeners();\n  //   document.querySelector('.add-button').addEventListener('click', () => addCardModal.open());\n  //   function addingCardToPage(data) {\n  //     const card = new Card({\n  //       data,\n  //       handleCardClick: () => {\n  //         imageOpenModal.open(data.name, data.link)\n  //       },\n  //       handleDeleteClick: (cardId) => {\n  //         //open form to ask user's confirmation to delete card\n  //         deleteCardModal.open(cardId);\n  //         //handle click on submit button\n  //         deleteCardModal.setSubmitHandler(() => {\n  //           //remove the card\n  //           api.removeCard(cardId)\n  //             .then(() => {\n  //               card.deleteCard();\n  //               deleteCardModal.close();\n  //             })\n  //             .catch(err => console.log(err));\n  //         });\n  //       },\n  //       handleLikeClick: (cardId) => {\n  //         const isLiked = card._element.querySelector('.element__like').classList.contains('element__like_active');\n  //         if(isLiked) {\n  //           api.removeCardLike(cardId)\n  //             .then(res => {\n  //               card._element.querySelector('.element__like').classList.remove('element__like_active');\n  //               card.likesCount(res.likes.length)\n  //             })\n  //             .catch(err => console.log(err))\n  //         } else {\n  //           api.addCardLike(cardId)\n  //             .then(res => {\n  //               card._element.querySelector('.element__like').classList.add('element__like_active');\n  //               return card.likesCount(res.likes.length)\n  //             })\n  //             .catch(err => console.log(err))\n  //         }\n  //       }\n  //     }, userData._id, cardsConfig.cardSelector);\n  //     defaultCardList.addItem(card.getCardElements());\n  //   }\n  //   const profile = new UserInfo({\n  //     userNameSelector: profileConfig.profileName,\n  //     userDescriptionSelector: profileConfig.profileDescription,\n  //     userAvatarSelector: profileConfig.profileAvatar\n  //   });\n  //   //set user infos(name and job) on profile section on page launch\n  //   profile.setUserInfo({\n  //     userName: userData.name,\n  //     userDescription: userData.about,\n  //     userAvatar: userData.avatar\n  //   });\n  //   //edit-profile form\n  //   const editProfileModal = new PopupWithForm({\n  //     popupSelector: popupConfig.editFormModal,\n  //     handleFormSubmit: (data) => {\n  //       submitEdit.textContent = \"Saving...\";\n  //       api.setUserInfos({\n  //         name: data.name,\n  //         about: data.about\n  //       })\n  //         .then(() => {\n  //           submitEdit.textContent = \"Save\";\n  //           profile.setUserInfo({\n  //             userName: data.name,\n  //             userDescription: data.about\n  //           });\n  //         })\n  //         .then(() => {\n  //           editProfileModal.close();\n  //         })\n  //         .catch(err => console.log(err))\n  //     }\n  //   });\n  //   // add listeners for edit-icon\n  //   document.querySelector('.profile__edit').addEventListener('click', () => {\n  //     editProfileModal.open();\n  //     const userInfos = profile.getUserInfo();\n  //     nameInput.value = userInfos.userName;\n  //     descriptionInput.value = userInfos.userDescription;\n  //   });\n  //   editProfileModal.setEventListeners();\n  //   //retrieve user avatar\n  //   // avatarImage.src = userData.avatar;\n  // })\n  // .catch(err => console.log(err));\n  // })\n\n\n  function handleDeleteCard(cardId) {}\n\n  function handleCardLike(cardId) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XwA01L1rkj8/vlkrW3VRbyZa6c8=\");\n\n_c = App;\nexport const popupEditProfile = document.querySelector('.popup_type_edit-profile');\nexport const popupAddCard = document.querySelector('.popup_type_add-card');\nexport const popupEditAvatar = document.querySelector('.popup_type_edit-avatar');\nconsole.log(popupAddCard);\nconsole.log(popupEditAvatar);\nconsole.log(popupEditProfile);\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emiline/Desktop/dev/around-react/src/components/App.js"],"names":["React","CurrentUserContext","defaultSettings","profileConfig","cardsConfig","popupConfig","avatarImage","avatarPicInput","avatarEditButton","descriptionInput","nameInput","submitAvatar","submitCard","submitEdit","projectId","Api","Card","Header","Main","Footer","AddCardPopup","EditAvatarPopup","EditProfilePopup","PopupWithForm","PopupWithImage","App","currentUser","setCurrentUser","useState","cards","setCards","api","baseUrl","headers","authorization","useEffect","getUserInfo","then","res","catch","err","console","log","getInitialCards","map","card","title","name","link","_id","likes","userId","owner","isEditAvatar","setEditAvatar","isEditProfile","setEditProfile","isAddNewCard","setAddNewCard","isDeleteCard","setDeleteCard","isImageExpand","setImageExpand","imageLink","setImageLink","imageTitle","setImageTitle","handleEditAvatarBtn","handleEditProfileBtn","handleEditAddCardBtn","handlePopupClose","handleImageExpand","handleDeleteCard","cardId","handleCardLike","popupEditProfile","document","querySelector","popupAddCard","popupEditAvatar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { CurrentUserContext } from '../contexts/currentUserContext';\nimport { defaultSettings, profileConfig, cardsConfig, popupConfig, avatarImage, avatarPicInput, avatarEditButton,\n  descriptionInput, nameInput, submitAvatar, submitCard, submitEdit,projectId } from '../utils/constants';\nimport Api from './Api';\nimport Card from './Card';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport AddCardPopup from './AddCardPopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport PopupWithForm from './PopupWithForm';\nimport PopupWithImage from './PopupWithImage';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState({});\n\n  const api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-5\",\n    headers: {\n      authorization: projectId,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  //retrieve user profile infor from server\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  //collect cards from server\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then((res) => {\n        setCards(res.map((card) => {\n          title: card.name;\n          link: card.link;\n          _id: card._id;\n          likes: card.likes;\n          userId: card.owner\n        }));\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  //popupus\n  const [isEditAvatar, setEditAvatar] = React.useState(false);\n  const [isEditProfile, setEditProfile] = React.useState(false);\n  const [isAddNewCard, setAddNewCard] = React.useState(false);\n  const [isDeleteCard, setDeleteCard] = React.useState(false);\n  const [isImageExpand, setImageExpand] = React.useState(false);\n  //expand image elements\n  const [imageLink, setImageLink] = React.useState('');\n  const [imageTitle, setImageTitle] = React.useState('');\n\n  function handleEditAvatarBtn() {\n    setEditAvatar(true);\n  }\n  function handleEditProfileBtn() {\n    setEditProfile(true);\n  }\n  function handleEditAddCardBtn() {\n    setAddNewCard(true);\n  }\n  function handlePopupClose() {\n    setEditAvatar(false);\n    setEditProfile(false);\n    setAddNewCard(false);\n    setImageExpand(false);\n  }\n  function handleImageExpand() {\n    setImageTitle(name);\n    setImageLink(link);\n    setImageExpand(true);\n  }\n\n\n  // React.useEffect(() => {\n  //   api.getAppInfo()\n  // .then(([userData, initialCards]) => {\n  //   //instance of section class\n  //   const defaultCardList = new Section({\n  //     item: initialCards,\n  //     renderer: addingCardToPage\n  //     },\n  //     cardsConfig.placesWrap\n  //   )\n  //   //render cards to the page\n  //   defaultCardList.rendererItems();\n\n  //   //click on add button to add cards to the page\n  //   const addCardModal = new PopupWithForm({\n  //     popupSelector: popupConfig.addCardFormModal,\n  //     handleFormSubmit: (data) => {\n  //       submitCard.textContent = \"Creating...\";\n  //       api.addCard(data)\n  //         .then(data => {\n  //           submitCard.textContent = \"Create\";\n  //           //instance of card\n  //           addingCardToPage(data);\n  //           addCardModal.close();\n  //         })\n  //         .catch(err => console.log(err))\n  //     }\n  //   });\n  //   addCardModal.setEventListeners();\n  //   document.querySelector('.add-button').addEventListener('click', () => addCardModal.open());\n\n  //   function addingCardToPage(data) {\n  //     const card = new Card({\n  //       data,\n  //       handleCardClick: () => {\n  //         imageOpenModal.open(data.name, data.link)\n  //       },\n  //       handleDeleteClick: (cardId) => {\n  //         //open form to ask user's confirmation to delete card\n  //         deleteCardModal.open(cardId);\n  //         //handle click on submit button\n  //         deleteCardModal.setSubmitHandler(() => {\n  //           //remove the card\n  //           api.removeCard(cardId)\n  //             .then(() => {\n  //               card.deleteCard();\n  //               deleteCardModal.close();\n  //             })\n  //             .catch(err => console.log(err));\n  //         });\n  //       },\n  //       handleLikeClick: (cardId) => {\n  //         const isLiked = card._element.querySelector('.element__like').classList.contains('element__like_active');\n  //         if(isLiked) {\n  //           api.removeCardLike(cardId)\n  //             .then(res => {\n  //               card._element.querySelector('.element__like').classList.remove('element__like_active');\n  //               card.likesCount(res.likes.length)\n  //             })\n  //             .catch(err => console.log(err))\n  //         } else {\n  //           api.addCardLike(cardId)\n  //             .then(res => {\n  //               card._element.querySelector('.element__like').classList.add('element__like_active');\n  //               return card.likesCount(res.likes.length)\n  //             })\n  //             .catch(err => console.log(err))\n  //         }\n  //       }\n  //     }, userData._id, cardsConfig.cardSelector);\n\n  //     defaultCardList.addItem(card.getCardElements());\n  //   }\n\n  //   const profile = new UserInfo({\n  //     userNameSelector: profileConfig.profileName,\n  //     userDescriptionSelector: profileConfig.profileDescription,\n  //     userAvatarSelector: profileConfig.profileAvatar\n  //   });\n  //   //set user infos(name and job) on profile section on page launch\n  //   profile.setUserInfo({\n  //     userName: userData.name,\n  //     userDescription: userData.about,\n  //     userAvatar: userData.avatar\n  //   });\n\n  //   //edit-profile form\n  //   const editProfileModal = new PopupWithForm({\n  //     popupSelector: popupConfig.editFormModal,\n  //     handleFormSubmit: (data) => {\n  //       submitEdit.textContent = \"Saving...\";\n  //       api.setUserInfos({\n  //         name: data.name,\n  //         about: data.about\n  //       })\n  //         .then(() => {\n  //           submitEdit.textContent = \"Save\";\n  //           profile.setUserInfo({\n  //             userName: data.name,\n  //             userDescription: data.about\n  //           });\n  //         })\n  //         .then(() => {\n  //           editProfileModal.close();\n  //         })\n  //         .catch(err => console.log(err))\n  //     }\n  //   });\n\n  //   // add listeners for edit-icon\n  //   document.querySelector('.profile__edit').addEventListener('click', () => {\n  //     editProfileModal.open();\n  //     const userInfos = profile.getUserInfo();\n  //     nameInput.value = userInfos.userName;\n  //     descriptionInput.value = userInfos.userDescription;\n  //   });\n  //   editProfileModal.setEventListeners();\n\n  //   //retrieve user avatar\n  //   // avatarImage.src = userData.avatar;\n  // })\n  // .catch(err => console.log(err));\n  // })\n\n  function handleDeleteCard(cardId) {\n\n  }\n\n  function handleCardLike(cardId) {\n\n  }\n\n  return (\n    <div className=\"body\">\n    </div>\n  );\n}\nexport const popupEditProfile = document.querySelector('.popup_type_edit-profile');\nexport const popupAddCard = document.querySelector('.popup_type_add-card');\nexport const popupEditAvatar = document.querySelector('.popup_type_edit-avatar');\n\nconsole.log(popupAddCard);\nconsole.log(popupEditAvatar);\nconsole.log(popupEditProfile);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}