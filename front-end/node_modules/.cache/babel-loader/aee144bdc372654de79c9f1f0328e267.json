{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/emiline/Desktop/dev/around-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport AddPlacePopup from './AddNewCardPopup';\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport PopupWithImage from './PopupWithImage';\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  _s();\n\n  // current user context\n  const [currentUser, setCurrentUser] = React.useState({}); //popupus\n\n  const [isAddNewCard, setAddNewCardPopup] = React.useState(false);\n  const [isEditAvatar, setEditAvatarPopup] = React.useState(false);\n  const [isEditProfile, setEditProfilePopup] = React.useState(false);\n  const [isDeleteCard, setDeleteCardPopup] = React.useState(false);\n  const [isImageExpand, setImageExpand] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: \"Yosemite\",\n    link: \"https://code.s3.yandex.net/web-code/yosemite.jpg\"\n  });\n  const [cards, setCards] = React.useState([]); //handle click on buttons\n\n  function handleEditAvatarBtn() {\n    setEditAvatarPopup(true);\n  }\n\n  function handleEditProfileBtn() {\n    setEditProfilePopup(true);\n  }\n\n  function handleAddCardBtn() {\n    setAddNewCardPopup(true);\n  } // function handleDeleteBtn(card) { // not needed yet\n  //   setDeleteCardPopup(true);\n  // }\n\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImageExpand(true);\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const res = isLiked ? api.removeCardLike(card.id) : api.addCardLike(card.id);\n    res.then(newCard => {\n      // Create a new array based on the existing one and putting a new card into it\n      const newCards = cards.map(c => c.id === card.id ? transformCard(newCard) : c); // Update the state\n\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopup(false);\n    setEditProfilePopup(false);\n    setAddNewCardPopup(false);\n    setDeleteCardPopup(false);\n    setImageExpand(false);\n  } // to be handled later\n  // function handleEscClose(evt) {\n  //   if(evt.key === 'Escape') {\n  //     closeAllPopups();\n  //   }\n  // }\n\n\n  function handlePopupClose(evt) {\n    if (evt.target !== evt.currentTarget) return;\n    closeAllPopups();\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card.id).then(() => {\n      const cardsCopy = cards.filter(item => item.id !== card.id);\n      setCards(cardsCopy);\n    }).catch(err => console.log(err));\n  }\n\n  function handleEditAvatar(avatar) {\n    api.setUserAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser(res);\n    }).then(() => setEditAvatarPopup(false)).catch(err => console.log(err));\n  }\n\n  function handleEditProfile({\n    name,\n    about\n  }) {\n    api.setUserInfos({\n      name,\n      about\n    }).then(user => {\n      setCurrentUser(user);\n    }).then(() => setEditProfilePopup(false)).catch(err => console.log(err));\n  }\n\n  function transformCard(cardItem) {\n    return {\n      alt: cardItem.name,\n      title: cardItem.name,\n      src: cardItem.link,\n      id: cardItem._id,\n      owner: cardItem.owner,\n      likes: cardItem.likes\n    };\n  }\n\n  function handleAddNewCard({\n    name,\n    link\n  }) {\n    api.addCard({\n      name,\n      link\n    }).then(newCard => setCards([transformCard(newCard), ...cards])).then(() => setAddNewCardPopup(false)).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n    api.getInitialCards().then(initialCards => {\n      setCards(initialCards.map(transformCard));\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main // send these state variables and their associated functions to main\n    , {\n      cards: cards // popups button click\n      ,\n      handleEditAvatarBtn: handleEditAvatarBtn,\n      handleEditProfileBtn: handleEditProfileBtn,\n      handleAddCardBtn: handleAddCardBtn // other buttons\n      ,\n      handleCardLike: card => handleCardLike(card),\n      handleCardDelete: card => handleCardDelete(card) // functionnalities\n      ,\n      handleCardClick: card => handleCardClick(card),\n      handleEscClose: handleEscClose,\n      onCardClick: card => handleCardClick(card),\n      onDeleteClick: card => handleCardDelete(card),\n      onLickeClick: card => handleCardLike(card)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatar,\n      onClose: handlePopupClose,\n      onUpdateAvatar: handleEditAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfile,\n      onClose: handlePopupClose,\n      onProfileUpdate: handleEditProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddNewCard,\n      onClose: handlePopupClose,\n      handleAddNewCard: handleAddNewCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: \"delete\",\n      title: \"Are You Sure?\",\n      submitButton: \"Yes\",\n      isOpen: isDeleteCard,\n      onClose: handlePopupClose,\n      onSubmit: handleCardDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithImage, {\n      src: selectedCard.src,\n      title: selectedCard.title,\n      isOpen: isImageExpand,\n      onClose: handlePopupClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rROUjfAcLv9gD1D7gogVDePq65A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emiline/Desktop/dev/around-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","AddPlacePopup","EditAvatarPopup","EditProfilePopup","PopupWithImage","api","CurrentUserContext","App","currentUser","setCurrentUser","useState","isAddNewCard","setAddNewCardPopup","isEditAvatar","setEditAvatarPopup","isEditProfile","setEditProfilePopup","isDeleteCard","setDeleteCardPopup","isImageExpand","setImageExpand","selectedCard","setSelectedCard","name","link","cards","setCards","handleEditAvatarBtn","handleEditProfileBtn","handleAddCardBtn","handleCardClick","card","handleCardLike","isLiked","likes","some","i","_id","res","removeCardLike","id","addCardLike","then","newCard","newCards","map","c","transformCard","catch","err","console","log","closeAllPopups","handlePopupClose","evt","target","currentTarget","handleCardDelete","removeCard","cardsCopy","filter","item","handleEditAvatar","avatar","setUserAvatar","handleEditProfile","about","setUserInfos","user","cardItem","alt","title","src","owner","handleAddNewCard","addCard","useEffect","getUserInfo","getInitialCards","initialCards","handleEscClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport AddPlacePopup from './AddNewCardPopup';\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport PopupWithImage from './PopupWithImage';\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  // current user context\n  const [currentUser, setCurrentUser] = React.useState({});\n  //popupus\n  const [isAddNewCard, setAddNewCardPopup] = React.useState(false);\n  const [isEditAvatar, setEditAvatarPopup] = React.useState(false);\n  const [isEditProfile, setEditProfilePopup] = React.useState(false);\n  const [isDeleteCard, setDeleteCardPopup] = React.useState(false);\n  const [isImageExpand, setImageExpand] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({name: \"Yosemite\", link: \"https://code.s3.yandex.net/web-code/yosemite.jpg\"});\n  const [cards, setCards] = React.useState([]);\n\n\n  //handle click on buttons\n  function handleEditAvatarBtn() {\n    setEditAvatarPopup(true);\n  }\n  function handleEditProfileBtn() {\n    setEditProfilePopup(true);\n  }\n  function handleAddCardBtn() {\n    setAddNewCardPopup(true);\n  }\n  // function handleDeleteBtn(card) { // not needed yet\n  //   setDeleteCardPopup(true);\n  // }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImageExpand(true);\n  }\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    const res = isLiked ? api.removeCardLike(card.id) : api.addCardLike(card.id);\n\n    res.then((newCard) => {\n      // Create a new array based on the existing one and putting a new card into it\n      const newCards = cards.map((c) => c.id === card.id ? transformCard(newCard) : c);\n      // Update the state\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n  function closeAllPopups() {\n    setEditAvatarPopup(false);\n    setEditProfilePopup(false);\n    setAddNewCardPopup(false);\n    setDeleteCardPopup(false);\n    setImageExpand(false);\n  }\n  // to be handled later\n  // function handleEscClose(evt) {\n  //   if(evt.key === 'Escape') {\n  //     closeAllPopups();\n  //   }\n  // }\n  function handlePopupClose(evt) {\n    if(evt.target !== evt.currentTarget) return;\n\n    closeAllPopups();\n  }\n  function handleCardDelete(card) {\n    api.removeCard(card.id)\n      .then(() => {\n        const cardsCopy = cards.filter((item) => item.id !== card.id);\n        setCards(cardsCopy);\n      })\n      .catch(err => console.log(err));\n  }\n\n  function handleEditAvatar(avatar) {\n    api.setUserAvatar({avatar})\n      .then((res) => { setCurrentUser(res) })\n      .then(() =>  setEditAvatarPopup(false))\n      .catch(err => console.log(err));\n  }\n\n  function handleEditProfile({name, about}) {\n    api.setUserInfos({name, about})\n      .then((user) => { setCurrentUser(user); })\n      .then(() =>  setEditProfilePopup(false))\n      .catch(err => console.log(err));\n  }\n\n  function transformCard(cardItem) {\n    return {\n      alt: cardItem.name,\n      title: cardItem.name,\n      src: cardItem.link,\n      id: cardItem._id,\n      owner: cardItem.owner,\n      likes: cardItem.likes\n    }\n  }\n\n  function handleAddNewCard({name, link}) {\n    api.addCard({name, link})\n      .then((newCard) => setCards([transformCard(newCard), ...cards]) )\n      .then(() => setAddNewCardPopup(false))\n      .catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch(err => console.log(err));\n\n    api.getInitialCards()\n    .then((initialCards) => {\n      setCards(\n        initialCards.map(transformCard)\n      )\n    })\n    .catch(err => console.log(err));\n  }, [])\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header />\n      <Main\n        // send these state variables and their associated functions to main\n        cards={cards}\n        // popups button click\n        handleEditAvatarBtn={handleEditAvatarBtn}\n        handleEditProfileBtn={handleEditProfileBtn}\n        handleAddCardBtn={handleAddCardBtn}\n        // other buttons\n        handleCardLike={(card) => handleCardLike(card)}\n        handleCardDelete={(card) => handleCardDelete(card)}\n        // functionnalities\n        handleCardClick={(card) => handleCardClick(card)}\n        handleEscClose={handleEscClose}\n        onCardClick={(card) => handleCardClick(card)}\n        onDeleteClick={(card) => handleCardDelete(card)}\n        onLickeClick={(card) => handleCardLike(card)}\n      />\n      <Footer />\n\n      {/* Edit avatar popup */}\n      <EditAvatarPopup isOpen={isEditAvatar} onClose={handlePopupClose} onUpdateAvatar={handleEditAvatar} />\n\n      {/* Edit Profile popup */}\n      <EditProfilePopup isOpen={isEditProfile} onClose={handlePopupClose} onProfileUpdate={handleEditProfile} />\n\n      {/* Add New Card Popup */}\n      <AddPlacePopup isOpen={isAddNewCard} onClose={handlePopupClose} handleAddNewCard={handleAddNewCard} />\n\n      {/* Delete card confirmation - not needed yet */}\n      <PopupWithForm name=\"delete\" title=\"Are You Sure?\" submitButton=\"Yes\" isOpen={isDeleteCard} onClose={handlePopupClose} onSubmit={handleCardDelete} />\n\n      {/* Expand card on full-screen */}\n      <PopupWithImage src={selectedCard.src} title={selectedCard.title} isOpen={isImageExpand} onClose={handlePopupClose} />\n\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}