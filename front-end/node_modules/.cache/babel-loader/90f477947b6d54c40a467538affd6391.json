{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/emiline/Desktop/dev/around-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from '../utils/Api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n  _s();\n\n  const [cards, setCards] = React.useState([]);\n  const currentUser = React.useState(CurrentUserContext);\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Send a request to the API and getting the updated card data\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Create a new array based on the existing one and putting a new card into it\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Update the state\n\n      setCards(newCards);\n    });\n  } //collect info from server\n\n\n  React.useEffect(() => {\n    // promise all about user before rendering data to page\n    api.getAppInfo().then(([userData, initialCards]) => {\n      // user info\n      setUserAvatar(userData.avatar);\n      setUserName(userData.name);\n      setUserDescription(userData.about); // cards\n\n      setCards(initialCards.map(cardItem => ({\n        alt: cardItem.name,\n        title: cardItem.name,\n        src: cardItem.link,\n        id: cardItem._id,\n        likes: cardItem.likes\n      })));\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentUser.avatar,\n            alt: \"profile-pic\",\n            className: \"profile__photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            \"aria-label\": \"edit-avatar\",\n            className: \"profile__photo_edit\",\n            onClick: props.handleEditAvatarBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__name\",\n              children: currentUser.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              \"aria-label\": \"edit-profile\",\n              className: \"profile__edit\",\n              onClick: props.handleEditProfileBtn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__description\",\n            children: currentUser.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"aria-label\": \"add-card-button\",\n          className: \"add-button\",\n          onClick: props.handleAddCardBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"elements\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"elements__list\",\n          children: cards.map((card, id) => /*#__PURE__*/_jsxDEV(Card, {\n            alt: card.alt,\n            src: card.src,\n            title: card.title,\n            likes: card.likes,\n            handleCardClick: () => props.handleCardClick(card)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Main, \"Nt4Nd7nzRsIb/dT4jfgVwQJwJyA=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/emiline/Desktop/dev/around-react/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","props","cards","setCards","useState","currentUser","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","newCards","map","c","useEffect","getAppInfo","userData","initialCards","setUserAvatar","avatar","setUserName","name","setUserDescription","about","cardItem","alt","title","src","link","id","catch","err","console","log","handleEditAvatarBtn","handleEditProfileBtn","handleAddCardBtn","handleCardClick"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA1B;AACA,QAAMC,WAAW,GAAGT,KAAK,CAACQ,QAAN,CAAeL,kBAAf,CAApB;;AAEA,WAASO,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B;AACA,UAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUP,WAAW,CAACO,GAA3C,CAAhB,CAF4B,CAI5B;;AACAf,IAAAA,GAAG,CAACgB,oBAAJ,CAAyBN,IAAI,CAACK,GAA9B,EAAmC,CAACJ,OAApC,EAA6CM,IAA7C,CAAmDC,OAAD,IAAa;AAC3D;AACF,YAAMC,QAAQ,GAAGd,KAAK,CAACe,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACN,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBG,OAArB,GAA+BG,CAAhD,CAAjB,CAF6D,CAG7D;;AACAf,MAAAA,QAAQ,CAACa,QAAD,CAAR;AACD,KALD;AAMD,GAfkB,CAiBnB;;;AACApB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACpB;AACAtB,IAAAA,GAAG,CAACuB,UAAJ,GACCN,IADD,CACM,CAAC,CAACO,QAAD,EAAWC,YAAX,CAAD,KAA8B;AAClC;AACAC,MAAAA,aAAa,CAACF,QAAQ,CAACG,MAAV,CAAb;AACAC,MAAAA,WAAW,CAACJ,QAAQ,CAACK,IAAV,CAAX;AACAC,MAAAA,kBAAkB,CAACN,QAAQ,CAACO,KAAV,CAAlB,CAJkC,CAMlC;;AACAzB,MAAAA,QAAQ,CAACmB,YAAY,CAACL,GAAb,CAAkBY,QAAD,KAAe;AACvCC,QAAAA,GAAG,EAAED,QAAQ,CAACH,IADyB;AAEvCK,QAAAA,KAAK,EAAEF,QAAQ,CAACH,IAFuB;AAGvCM,QAAAA,GAAG,EAAEH,QAAQ,CAACI,IAHyB;AAIvCC,QAAAA,EAAE,EAAEL,QAAQ,CAACjB,GAJ0B;AAKvCH,QAAAA,KAAK,EAAEoB,QAAQ,CAACpB;AALuB,OAAf,CAAjB,CAAD,CAAR;AAOD,KAfD,EAgBC0B,KAhBD,CAgBOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhBd;AAiBD,GAnBD,EAmBG,EAnBH;AAsBA,sBACE;AAAA,2BACA;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACE;AAAS,QAAA,SAAS,EAAC,SAAnB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,GAAG,EAAE/B,WAAW,CAACmB,MAAtB;AAA8B,YAAA,GAAG,EAAC,aAAlC;AAAgD,YAAA,SAAS,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,0BAAW,aAAjC;AAA+C,YAAA,SAAS,EAAC,qBAAzD;AAA+E,YAAA,OAAO,EAAEvB,KAAK,CAACsC;AAA9F;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,wBAA+BlC,WAAW,CAACqB;AAA3C;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,4BAAW,cAAjC;AAAgD,cAAA,SAAS,EAAC,eAA1D;AAA0E,cAAA,OAAO,EAAEzB,KAAK,CAACuC;AAAzF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAG,YAAA,SAAS,EAAC,sBAAb;AAAA,sBAAqCnC,WAAW,CAACuB;AAAjD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAYE;AAAQ,wBAAW,iBAAnB;AAAqC,UAAA,SAAS,EAAC,YAA/C;AAA4D,UAAA,OAAO,EAAE3B,KAAK,CAACwC;AAA3E;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAS,QAAA,SAAS,EAAC,UAAnB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBAEIvC,KAAK,CAACe,GAAN,CAAU,CAACV,IAAD,EAAO2B,EAAP,kBACR,QAAC,IAAD;AAEE,YAAA,GAAG,EAAE3B,IAAI,CAACuB,GAFZ;AAGE,YAAA,GAAG,EAAEvB,IAAI,CAACyB,GAHZ;AAIE,YAAA,KAAK,EAAEzB,IAAI,CAACwB,KAJd;AAKE,YAAA,KAAK,EAAExB,IAAI,CAACE,KALd;AAME,YAAA,eAAe,EAAE,MAAMR,KAAK,CAACyC,eAAN,CAAsBnC,IAAtB;AANzB,aACO2B,EADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAqCD;;GA7EQlC,I;;KAAAA,I;AAgFT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport api from '../utils/Api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction Main(props) {\n  const [cards, setCards] = React.useState([]);\n  const currentUser = React.useState(CurrentUserContext);\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Send a request to the API and getting the updated card data\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        // Create a new array based on the existing one and putting a new card into it\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Update the state\n      setCards(newCards);\n    });\n  }\n\n  //collect info from server\n  React.useEffect(() => {\n    // promise all about user before rendering data to page\n    api.getAppInfo()\n    .then(([userData, initialCards]) => {\n      // user info\n      setUserAvatar(userData.avatar);\n      setUserName(userData.name);\n      setUserDescription(userData.about);\n\n      // cards\n      setCards(initialCards.map((cardItem) => ({\n        alt: cardItem.name,\n        title: cardItem.name,\n        src: cardItem.link,\n        id: cardItem._id,\n        likes: cardItem.likes\n      })));\n    })\n    .catch(err => console.log(err));\n  }, []);\n\n\n  return(\n    <>\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar\">\n          <img src={currentUser.avatar} alt=\"profile-pic\" className=\"profile__photo\" />\n          <button type=\"button\" aria-label=\"edit-avatar\" className=\"profile__photo_edit\" onClick={props.handleEditAvatarBtn}></button>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__title\">\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <button type=\"button\" aria-label=\"edit-profile\" className=\"profile__edit\" onClick={props.handleEditProfileBtn}></button>\n          </div>\n          <p className=\"profile__description\">{currentUser.about}</p>\n        </div>\n        <button aria-label=\"add-card-button\" className=\"add-button\" onClick={props.handleAddCardBtn}></button>\n      </section>\n\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {\n            cards.map((card, id) =>\n              <Card\n                key={id}\n                alt={card.alt}\n                src={card.src}\n                title={card.title}\n                likes={card.likes}\n                handleCardClick={() => props.handleCardClick(card)}\n              />\n            )\n          }\n        </ul>\n      </section>\n    </main>\n    </>\n  )\n}\n\n\nexport default Main;\n\n"]},"metadata":{},"sourceType":"module"}