{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/emiline/Desktop/dev/around-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/currentUserContext';\nimport { projectId } from '../utils/constants';\nimport Api from './Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport AddCardPopup from './AddCardPopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport PopupWithForm from './PopupWithForm';\nimport PopupWithImage from './PopupWithImage';\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-5\",\n    headers: {\n      authorization: projectId,\n      \"Content-Type\": \"application/json\"\n    }\n  }); //retrieve user profile infor from server\n\n  React.useEffect(() => {\n    api.getAppInfo().then(([userData, initialCards]) => {\n      //instance of section class\n      const defaultCardList = new Section({\n        item: initialCards,\n        renderer: addingCardToPage\n      }, cardsConfig.placesWrap); //render cards to the page\n\n      defaultCardList.rendererItems(); //click on add button to add cards to the page\n\n      const addCardModal = new PopupWithForm({\n        popupSelector: popupConfig.addCardFormModal,\n        handleFormSubmit: data => {\n          submitCard.textContent = \"Creating...\";\n          api.addCard(data).then(data => {\n            submitCard.textContent = \"Create\"; //instance of card\n\n            addingCardToPage(data);\n            addCardModal.close();\n          }).catch(err => console.log(err));\n        }\n      });\n      addCardModal.setEventListeners();\n      document.querySelector('.add-button').addEventListener('click', () => addCardModal.open());\n\n      function addingCardToPage(data) {\n        const card = new Card({\n          data,\n          handleCardClick: () => {\n            imageOpenModal.open(data.name, data.link);\n          },\n          handleDeleteClick: cardId => {\n            //open form to ask user's confirmation to delete card\n            deleteCardModal.open(cardId); //handle click on submit button\n\n            deleteCardModal.setSubmitHandler(() => {\n              //remove the card\n              api.removeCard(cardId).then(() => {\n                card.deleteCard();\n                deleteCardModal.close();\n              }).catch(err => console.log(err));\n            });\n          },\n          handleLikeClick: cardId => {\n            const isLiked = card._element.querySelector('.element__like').classList.contains('element__like_active');\n\n            if (isLiked) {\n              api.removeCardLike(cardId).then(res => {\n                card._element.querySelector('.element__like').classList.remove('element__like_active');\n\n                card.likesCount(res.likes.length);\n              }).catch(err => console.log(err));\n            } else {\n              api.addCardLike(cardId).then(res => {\n                card._element.querySelector('.element__like').classList.add('element__like_active');\n\n                return card.likesCount(res.likes.length);\n              }).catch(err => console.log(err));\n            }\n          }\n        }, userData._id, cardsConfig.cardSelector);\n        defaultCardList.addItem(card.getCardElements());\n      }\n\n      const profile = new UserInfo({\n        userNameSelector: profileConfig.profileName,\n        userDescriptionSelector: profileConfig.profileDescription,\n        userAvatarSelector: profileConfig.profileAvatar\n      }); //set user infos(name and job) on profile section on page launch\n\n      profile.setUserInfo({\n        userName: userData.name,\n        userDescription: userData.about,\n        userAvatar: userData.avatar\n      }); //edit-profile form\n\n      const editProfileModal = new PopupWithForm({\n        popupSelector: popupConfig.editFormModal,\n        handleFormSubmit: data => {\n          submitEdit.textContent = \"Saving...\";\n          api.setUserInfos({\n            name: data.name,\n            about: data.about\n          }).then(() => {\n            submitEdit.textContent = \"Save\";\n            profile.setUserInfo({\n              userName: data.name,\n              userDescription: data.about\n            });\n          }).then(() => {\n            editProfileModal.close();\n          }).catch(err => console.log(err));\n        }\n      }); // add listeners for edit-icon\n\n      document.querySelector('.profile__edit').addEventListener('click', () => {\n        editProfileModal.open();\n        const userInfos = profile.getUserInfo();\n        nameInput.value = userInfos.userName;\n        descriptionInput.value = userInfos.userDescription;\n      });\n      editProfileModal.setEventListeners(); //retrieve user avatar\n      // avatarImage.src = userData.avatar;\n    }).catch(err => console.log(err));\n  });\n\n  function handleDeleteCard(cardId) {}\n\n  function handleCardLike(cardId) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ia0l58pIwzCriyxaeyhKjUQd3Xo=\");\n\n_c = App;\nexport const popupEditProfile = document.querySelector('.popup_type_edit-profile');\nexport const popupAddCard = document.querySelector('.popup_type_add-card');\nexport const popupEditAvatar = document.querySelector('.popup_type_edit-avatar');\nconsole.log(popupAddCard);\nconsole.log(popupEditAvatar);\nconsole.log(popupEditProfile);\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emiline/Desktop/dev/around-react/src/components/App.js"],"names":["React","CurrentUserContext","projectId","Api","Header","Main","Footer","AddCardPopup","EditAvatarPopup","EditProfilePopup","PopupWithForm","PopupWithImage","App","currentUser","setCurrentUser","useState","api","baseUrl","headers","authorization","useEffect","getAppInfo","then","userData","initialCards","defaultCardList","Section","item","renderer","addingCardToPage","cardsConfig","placesWrap","rendererItems","addCardModal","popupSelector","popupConfig","addCardFormModal","handleFormSubmit","data","submitCard","textContent","addCard","close","catch","err","console","log","setEventListeners","document","querySelector","addEventListener","open","card","Card","handleCardClick","imageOpenModal","name","link","handleDeleteClick","cardId","deleteCardModal","setSubmitHandler","removeCard","deleteCard","handleLikeClick","isLiked","_element","classList","contains","removeCardLike","res","remove","likesCount","likes","length","addCardLike","add","_id","cardSelector","addItem","getCardElements","profile","UserInfo","userNameSelector","profileConfig","profileName","userDescriptionSelector","profileDescription","userAvatarSelector","profileAvatar","setUserInfo","userName","userDescription","about","userAvatar","avatar","editProfileModal","editFormModal","submitEdit","setUserInfos","userInfos","getUserInfo","nameInput","value","descriptionInput","handleDeleteCard","handleCardLike","popupEditProfile","popupAddCard","popupEditAvatar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { CurrentUserContext } from '../contexts/currentUserContext';\nimport { projectId } from '../utils/constants';\nimport Api from './Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport AddCardPopup from './AddCardPopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport PopupWithForm from './PopupWithForm';\nimport PopupWithImage from './PopupWithImage';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useState({});\n  const api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-5\",\n    headers: {\n      authorization: projectId,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  //retrieve user profile infor from server\n  React.useEffect(() => {\n    api.getAppInfo()\n  .then(([userData, initialCards]) => {\n    //instance of section class\n    const defaultCardList = new Section({\n      item: initialCards,\n      renderer: addingCardToPage\n      },\n      cardsConfig.placesWrap\n    )\n    //render cards to the page\n    defaultCardList.rendererItems();\n\n    //click on add button to add cards to the page\n    const addCardModal = new PopupWithForm({\n      popupSelector: popupConfig.addCardFormModal,\n      handleFormSubmit: (data) => {\n        submitCard.textContent = \"Creating...\";\n        api.addCard(data)\n          .then(data => {\n            submitCard.textContent = \"Create\";\n            //instance of card\n            addingCardToPage(data);\n            addCardModal.close();\n          })\n          .catch(err => console.log(err))\n      }\n    });\n    addCardModal.setEventListeners();\n    document.querySelector('.add-button').addEventListener('click', () => addCardModal.open());\n\n    function addingCardToPage(data) {\n      const card = new Card({\n        data,\n        handleCardClick: () => {\n          imageOpenModal.open(data.name, data.link)\n        },\n        handleDeleteClick: (cardId) => {\n          //open form to ask user's confirmation to delete card\n          deleteCardModal.open(cardId);\n          //handle click on submit button\n          deleteCardModal.setSubmitHandler(() => {\n            //remove the card\n            api.removeCard(cardId)\n              .then(() => {\n                card.deleteCard();\n                deleteCardModal.close();\n              })\n              .catch(err => console.log(err));\n          });\n        },\n        handleLikeClick: (cardId) => {\n          const isLiked = card._element.querySelector('.element__like').classList.contains('element__like_active');\n          if(isLiked) {\n            api.removeCardLike(cardId)\n              .then(res => {\n                card._element.querySelector('.element__like').classList.remove('element__like_active');\n                card.likesCount(res.likes.length)\n              })\n              .catch(err => console.log(err))\n          } else {\n            api.addCardLike(cardId)\n              .then(res => {\n                card._element.querySelector('.element__like').classList.add('element__like_active');\n                return card.likesCount(res.likes.length)\n              })\n              .catch(err => console.log(err))\n          }\n        }\n      }, userData._id, cardsConfig.cardSelector);\n\n      defaultCardList.addItem(card.getCardElements());\n    }\n\n    const profile = new UserInfo({\n      userNameSelector: profileConfig.profileName,\n      userDescriptionSelector: profileConfig.profileDescription,\n      userAvatarSelector: profileConfig.profileAvatar\n    });\n    //set user infos(name and job) on profile section on page launch\n    profile.setUserInfo({\n      userName: userData.name,\n      userDescription: userData.about,\n      userAvatar: userData.avatar\n    });\n\n    //edit-profile form\n    const editProfileModal = new PopupWithForm({\n      popupSelector: popupConfig.editFormModal,\n      handleFormSubmit: (data) => {\n        submitEdit.textContent = \"Saving...\";\n        api.setUserInfos({\n          name: data.name,\n          about: data.about\n        })\n          .then(() => {\n            submitEdit.textContent = \"Save\";\n            profile.setUserInfo({\n              userName: data.name,\n              userDescription: data.about\n            });\n          })\n          .then(() => {\n            editProfileModal.close();\n          })\n          .catch(err => console.log(err))\n      }\n    });\n\n    // add listeners for edit-icon\n    document.querySelector('.profile__edit').addEventListener('click', () => {\n      editProfileModal.open();\n      const userInfos = profile.getUserInfo();\n      nameInput.value = userInfos.userName;\n      descriptionInput.value = userInfos.userDescription;\n    });\n    editProfileModal.setEventListeners();\n\n    //retrieve user avatar\n    // avatarImage.src = userData.avatar;\n  })\n  .catch(err => console.log(err));\n  })\n\n  function handleDeleteCard(cardId) {\n\n  }\n\n  function handleCardLike(cardId) {\n\n  }\n\n  return (\n    <div className=\"body\">\n    </div>\n  );\n}\nexport const popupEditProfile = document.querySelector('.popup_type_edit-profile');\nexport const popupAddCard = document.querySelector('.popup_type_add-card');\nexport const popupEditAvatar = document.querySelector('.popup_type_edit-avatar');\n\nconsole.log(popupAddCard);\nconsole.log(popupEditAvatar);\nconsole.log(popupEditProfile);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}