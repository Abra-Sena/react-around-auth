{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/emiline/Desktop/dev/around-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport AddPlacePopup from './AddNewCardPopup';\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport PopupWithImage from './PopupWithImage';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\n\nfunction App() {\n  _s();\n\n  // current user context\n  const [currentUser, setCurrentUser] = React.useState({}); //popupus\n\n  const [isAddNewCard, setAddNewCardPopup] = React.useState(false);\n  const [isEditAvatar, setEditAvatarPopup] = React.useState(false);\n  const [isEditProfile, setEditProfilePopup] = React.useState(false);\n  const [isDeleteCard, setDeleteCardPopup] = React.useState(false);\n  const [isImageExpand, setImageExpand] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: \"Yosemite\",\n    link: \"https://code.s3.yandex.net/web-code/yosemite.jpg\"\n  });\n  const [cards, setCards] = React.useState([]); //handle click on buttons\n\n  function handleEditAvatarBtn() {\n    setEditAvatarPopup(true);\n  }\n\n  function handleEditProfileBtn() {\n    setEditProfilePopup(true);\n  }\n\n  function handleAddCardBtn() {\n    setAddNewCardPopup(true);\n  }\n\n  function handleDeleteBtn(card) {\n    setDeleteCardPopup(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImageExpand(true);\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    let res = isLiked ? api.removeCardLike(card.id) : api.addCardLike(card.id);\n    res.then(newCard => {\n      // Create a new array based on the existing one and putting a new card into it\n      const newCards = cards.map(c => c.id === card.id ? newCard : c); // Update the state\n\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleEscClose(evt) {\n    if (evt.which === 27) {\n      this.close();\n    }\n  }\n\n  function handlePopupClose(evt) {\n    if (evt.target !== evt.currentTarget) return;\n    setEditAvatarPopup(false);\n    setEditProfilePopup(false);\n    setAddNewCardPopup(false);\n    setDeleteCardPopup(false);\n    setSelectedCard(selectedCard);\n    setImageExpand(false);\n  }\n\n  function handleCardDelete(card) {\n    // setDeleteCardPopup(true);\n    api.removeCard(card.id).then(() => {\n      const cardsCopy = cards.filter(item => item.id !== card.id);\n      setCards(cardsCopy);\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddNewCard({\n    name,\n    link\n  }) {\n    api.addCard({\n      name,\n      link\n    }).then(newCard => setCards([newCard, ...cards])).then(() => handlePopupClose).catch(err => console.log(err));\n  }\n\n  function handleEditAvatar(avatar) {\n    api.setUserAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser(res);\n    }).then(() => handlePopupClose).catch(err => console.log(err));\n  }\n\n  function handleEditProfile({\n    name,\n    about\n  }) {\n    api.setUserInfos({\n      name,\n      about\n    }).then(user => {\n      setCurrentUser(user);\n    }).then(() => handlePopupClose).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n    api.getInitialCards().then(initialCards => {\n      setCards(initialCards.map(cardItem => ({\n        alt: cardItem.name,\n        title: cardItem.name,\n        src: cardItem.link,\n        id: cardItem._id,\n        owner: cardItem.owner,\n        likes: cardItem.likes\n      })));\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main // send these state variables and their associated functions to main\n    , {\n      cards: cards // popups button click\n      ,\n      handleEditAvatarBtn: handleEditAvatarBtn,\n      handleEditProfileBtn: handleEditProfileBtn,\n      handleAddCardBtn: handleAddCardBtn // other buttons\n      // handleDeleteBtn={() => handleDeleteBtn()}\n      ,\n      handleCardLike: card => handleCardLike(card),\n      handleCardDelete: card => handleCardDelete(card) // functionnalities\n      ,\n      handleCardClick: card => handleCardClick(card),\n      handleEscClose: handleEscClose,\n      onCardClick: card => handleCardClick(card),\n      onDeleteClick: () => handleDeleteBtn,\n      onLickeClick: card => handleCardLike(card)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatar,\n      onClose: handlePopupClose,\n      onUpdateAvatar: handleEditAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfile,\n      onClose: handlePopupClose,\n      onProfileUpdate: handleEditProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddNewCard,\n      onClose: handlePopupClose,\n      handleAddNewCard: handleAddNewCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: \"delete\",\n      title: \"Are You Sure?\",\n      submitButton: \"Yes\",\n      isOpen: isDeleteCard,\n      onClose: handlePopupClose,\n      onSubmit: handleCardDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithImage, {\n      src: selectedCard.src,\n      title: selectedCard.title,\n      isOpen: isImageExpand,\n      onClose: handlePopupClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rROUjfAcLv9gD1D7gogVDePq65A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emiline/Desktop/dev/around-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","AddPlacePopup","EditAvatarPopup","EditProfilePopup","PopupWithImage","CurrentUserContext","api","App","currentUser","setCurrentUser","useState","isAddNewCard","setAddNewCardPopup","isEditAvatar","setEditAvatarPopup","isEditProfile","setEditProfilePopup","isDeleteCard","setDeleteCardPopup","isImageExpand","setImageExpand","selectedCard","setSelectedCard","name","link","cards","setCards","handleEditAvatarBtn","handleEditProfileBtn","handleAddCardBtn","handleDeleteBtn","card","handleCardClick","handleCardLike","isLiked","likes","some","i","_id","res","removeCardLike","id","addCardLike","then","newCard","newCards","map","c","catch","err","console","log","handleEscClose","evt","which","close","handlePopupClose","target","currentTarget","handleCardDelete","removeCard","cardsCopy","filter","item","handleAddNewCard","addCard","handleEditAvatar","avatar","setUserAvatar","handleEditProfile","about","setUserInfos","user","useEffect","getUserInfo","getInitialCards","initialCards","cardItem","alt","title","src","owner"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport AddPlacePopup from './AddNewCardPopup';\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport PopupWithImage from './PopupWithImage';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\n\nfunction App() {\n  // current user context\n  const [currentUser, setCurrentUser] = React.useState({});\n  //popupus\n  const [isAddNewCard, setAddNewCardPopup] = React.useState(false);\n  const [isEditAvatar, setEditAvatarPopup] = React.useState(false);\n  const [isEditProfile, setEditProfilePopup] = React.useState(false);\n  const [isDeleteCard, setDeleteCardPopup] = React.useState(false);\n  const [isImageExpand, setImageExpand] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({name: \"Yosemite\", link: \"https://code.s3.yandex.net/web-code/yosemite.jpg\"});\n  const [cards, setCards] = React.useState([]);\n\n\n  //handle click on buttons\n  function handleEditAvatarBtn() {\n    setEditAvatarPopup(true);\n  }\n  function handleEditProfileBtn() {\n    setEditProfilePopup(true);\n  }\n  function handleAddCardBtn() {\n    setAddNewCardPopup(true);\n  }\n  function handleDeleteBtn(card) {\n    setDeleteCardPopup(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImageExpand(true);\n  }\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    let res = isLiked ? api.removeCardLike(card.id) : api.addCardLike(card.id);\n\n    res.then((newCard) => {\n      // Create a new array based on the existing one and putting a new card into it\n      const newCards = cards.map((c) => c.id === card.id ? newCard : c);\n      // Update the state\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n  function handleEscClose(evt) {\n    if(evt.which === 27) {\n      this.close();\n    }\n  }\n  function handlePopupClose(evt) {\n    if(evt.target !== evt.currentTarget) return;\n\n    setEditAvatarPopup(false);\n    setEditProfilePopup(false);\n    setAddNewCardPopup(false);\n    setDeleteCardPopup(false);\n    setSelectedCard(selectedCard);\n    setImageExpand(false);\n  }\n  function handleCardDelete(card) {\n    // setDeleteCardPopup(true);\n\n    api.removeCard(card.id)\n      .then(() => {\n        const cardsCopy = cards.filter((item) => item.id !== card.id);\n        setCards(cardsCopy);\n      })\n      .catch(err => console.log(err));\n  }\n\n  function handleAddNewCard({name, link}) {\n    api.addCard({name, link})\n      .then((newCard) => setCards([newCard, ...cards]) )\n      .then(() => handlePopupClose)\n      .catch(err => console.log(err));\n  }\n\n  function handleEditAvatar(avatar) {\n    api.setUserAvatar({avatar})\n      .then((res) => { setCurrentUser(res) })\n      .then(() =>  handlePopupClose)\n      .catch(err => console.log(err));\n  }\n\n  function handleEditProfile({name, about}) {\n    api.setUserInfos({name, about})\n      .then((user) => { setCurrentUser(user); })\n      .then(() =>  handlePopupClose)\n      .catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch(err => console.log(err));\n\n    api.getInitialCards()\n    .then((initialCards) => {\n      setCards(\n        initialCards.map((cardItem) => ({\n          alt: cardItem.name,\n          title: cardItem.name,\n          src: cardItem.link,\n          id: cardItem._id,\n          owner: cardItem.owner,\n          likes: cardItem.likes\n        }))\n      )\n    })\n    .catch(err => console.log(err));\n  }, [])\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header />\n      <Main\n        // send these state variables and their associated functions to main\n        cards={cards}\n        // popups button click\n        handleEditAvatarBtn={handleEditAvatarBtn}\n        handleEditProfileBtn={handleEditProfileBtn}\n        handleAddCardBtn={handleAddCardBtn}\n        // other buttons\n        // handleDeleteBtn={() => handleDeleteBtn()}\n        handleCardLike={(card) => handleCardLike(card)}\n        handleCardDelete={(card) => handleCardDelete(card)}\n        // functionnalities\n        handleCardClick={(card) => handleCardClick(card)}\n        handleEscClose={handleEscClose}\n        onCardClick={(card) => handleCardClick(card)}\n        onDeleteClick={() => handleDeleteBtn}\n        onLickeClick={(card) => handleCardLike(card)}\n      />\n      <Footer />\n\n      {/* Edit avatar popup */}\n      <EditAvatarPopup isOpen={isEditAvatar} onClose={handlePopupClose} onUpdateAvatar={handleEditAvatar} />\n\n      {/* Edit Profile popup */}\n      <EditProfilePopup isOpen={isEditProfile} onClose={handlePopupClose} onProfileUpdate={handleEditProfile} />\n\n      {/* Add New Card Popup */}\n      <AddPlacePopup isOpen={isAddNewCard} onClose={handlePopupClose} handleAddNewCard={handleAddNewCard} />\n\n      {/* Delete card confirmation */}\n      <PopupWithForm name=\"delete\" title=\"Are You Sure?\" submitButton=\"Yes\" isOpen={isDeleteCard} onClose={handlePopupClose} onSubmit={handleCardDelete} />\n\n      {/* Expand card on full-screen */}\n      <PopupWithImage src={selectedCard.src} title={selectedCard.title} isOpen={isImageExpand} onClose={handlePopupClose} />\n\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}