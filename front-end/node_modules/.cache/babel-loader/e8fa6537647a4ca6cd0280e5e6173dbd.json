{"ast":null,"code":"export const BASE_URL = \"https://register.nomoreparties.co\";\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/sigin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText)).then(data => {\n    if (data.token) {\n      localStorage.setItem(\"jwt\", data.token);\n      return data;\n    }\n\n    return;\n  }).catch(err => console.log(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText)).then(data => {\n    return data;\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/emiline/Desktop/dev/react-around-auth/front-end/src/utils/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","Accept","body","JSON","stringify","catch","err","console","log","authorize","then","res","ok","json","Promise","reject","statusText","data","token","localStorage","setItem","getContent"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,mCAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AAN2B,GAAvB,CAAL,CAQNQ,KARM,CAQCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CART,CAAP;AASD,CAVM;AAYP,OAAO,MAAMG,SAAS,GAAG,CAACb,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,QAAb,EAAsB;AAChCK,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFuB;AAMhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAN0B,GAAtB,CAAL,CAQJa,IARI,CAQEC,GAAD,IAASA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAe,WAAWJ,GAAG,CAACK,UAA9B,CARhC,EASJN,IATI,CASEO,IAAD,IAAU;AACd,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,KAAjC;AACA,aAAOD,IAAP;AACD;;AACD;AACD,GAfI,EAgBJZ,KAhBI,CAgBGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhBX,CAAP;AAiBD,CAlBM;AAoBP,OAAO,MAAMe,UAAU,GAAIH,KAAD,IAAW;AACnC,SAAOpB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASiB,KAAM;AAH1B;AAF0B,GAAzB,CAAL,CAQNR,IARM,CAQAC,GAAD,IAASA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAe,WAAWJ,GAAG,CAACK,UAA9B,CAR9B,EASNN,IATM,CASAO,IAAD,IAAU;AACd,WAAOA,IAAP;AACD,GAXM,EAYNZ,KAZM,CAYCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZT,CAAP;AAaD,CAdM","sourcesContent":["export const BASE_URL = \"https://register.nomoreparties.co\";\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({email, password})\n  })\n  .catch((err) => console.log(err))\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/sigin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ email, password }),\n  })\n    .then((res) => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"jwt\", data.token);\n        return data;\n      }\n      return;\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  })\n  .then((res) => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n  .then((data) => {\n    return data;\n  })\n  .catch((err) => console.log(err))\n};\n"]},"metadata":{},"sourceType":"module"}