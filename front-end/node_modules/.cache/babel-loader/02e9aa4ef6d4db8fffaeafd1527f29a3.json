{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/emiline/Desktop/dev/around-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FormValidator from \"./FormValidator\";\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { defaultSettings } from \"../utils/constants\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const [name, setName] = React.useState(\"\");\n  const [about, setAbout] = React.useState(\"\");\n  const currentUser = React.useContext(CurrentUserContext);\n  const editFormValidator = new FormValidator(defaultSettings, '.form_edit-profile');\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleAboutChange(evt) {\n    setAbout(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    editFormValidator.enableValidation();\n    props.onProfileUpdate({\n      name,\n      about\n    });\n  } // copy user data into popup form on open\n\n\n  React.useEffect(() => {\n    setName(currentUser && currentUser.name);\n    setAbout(currentUser && currentUser.about);\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"edit-profile\",\n    title: \"Edit Profile\",\n    submitButton: \"Save\",\n    submitButtonClassName: \"form__submit\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"profile-name\",\n      type: \"text\",\n      name: \"name\",\n      className: \"form__input form__input_type_name\",\n      placeholder: \"Name\",\n      minLength: \"2\",\n      maxLength: \"30\",\n      value: name,\n      onChange: handleNameChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"profile-name-error\",\n      className: \"form__field form__field_error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"profile-description\",\n      type: \"text\",\n      name: \"about\",\n      className: \"form__input form__input_type_description\",\n      placeholder: \"About Me\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      value: about,\n      onChange: handleAboutChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"profile-description-error\",\n      className: \"form__field form__field_error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"Q8s346VEA8uxUMkf/k1DzjZWeAg=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/emiline/Desktop/dev/around-react/src/components/EditProfilePopup.js"],"names":["React","FormValidator","PopupWithForm","CurrentUserContext","defaultSettings","EditProfilePopup","props","name","setName","useState","about","setAbout","currentUser","useContext","editFormValidator","handleNameChange","evt","target","value","handleAboutChange","handleSubmit","preventDefault","enableValidation","onProfileUpdate","useEffect","isOpen","onClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FormValidator from \"./FormValidator\";\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { defaultSettings } from \"../utils/constants\";\n\n\nfunction EditProfilePopup(props) {\n  const [name, setName] = React.useState(\"\");\n  const [about, setAbout] = React.useState(\"\");\n  const currentUser = React.useContext(CurrentUserContext);\n  const editFormValidator = new FormValidator(defaultSettings, '.form_edit-profile');\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleAboutChange(evt) {\n    setAbout(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    editFormValidator.enableValidation();\n    props.onProfileUpdate({name, about});\n  }\n\n  // copy user data into popup form on open\n  React.useEffect(() => {\n    setName(currentUser && currentUser.name);\n    setAbout(currentUser && currentUser.about);\n  }, [currentUser]);\n\n\n  return (\n    <PopupWithForm\n      name=\"edit-profile\"\n      title=\"Edit Profile\"\n      submitButton=\"Save\"\n      submitButtonClassName=\"form__submit\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input id=\"profile-name\" type=\"text\" name=\"name\" className=\"form__input form__input_type_name\" placeholder=\"Name\" minLength=\"2\" maxLength=\"30\" value={name} onChange={handleNameChange} required />\n      <span id=\"profile-name-error\" className=\"form__field form__field_error\"></span>\n      <input id=\"profile-description\" type=\"text\" name=\"about\" className=\"form__input form__input_type_description\" placeholder=\"About Me\" minLength=\"2\" maxLength=\"200\" value={about} onChange={handleAboutChange} required />\n      <span id=\"profile-description-error\" className=\"form__field form__field_error\"></span>\n    </PopupWithForm>\n  )\n}\nexport default EditProfilePopup;\n\n"]},"metadata":{},"sourceType":"module"}